结果填空题
是一类具有确定解的问题，要求你填入正确的答案。
你无须写出解题过程，不限定计算的过程，你可以通过编程、在纸上计算、甚至用excel和Windows自带的计算器算出答案，
只要:最终答案正确就能得到满分，否则得0分。
答案确保唯一性， 如果你填入的格式和比赛要求的不一样也会被判为0分，定要小心。

程序填空题
这种题型往往描述了一个具有确定解的题目，并给出了该问题的某一解法的代码， 其中会空缺一部分 ，你需要读懂代码的逻
辑，并对其中的空缺部分补充代码，使整段代码完整。
不要写上额外的注释、说明或不在题目要求之内的内容。

编程大题
题目为若干具有-定难度梯度、分值不等的编程题目。这些题目的要求明确、答案客观。解题一般要用到标准输入和输出。要
求选手通过编程，对给定的标准输入求解，并通过标准输出，按题目要求的格式输出解。题目-般会给出示例数据。
题目的考察点-般集中于对算法的设计和逻辑的组织上。理论上，选手不可能通过猜测或其它非编程的手段获得问题的解。选
手给出的解法应具有普遍性，不能只适用于题目的示例数据(当然，至少应该适用于题目的示例数据)。
为了测试选手给出解法的性能，评分时用的测试用例可能包含大数据量的压力测试用例，选手选择算法时要尽可能考虑可行性
的问题。
注意:在评卷时使用的输入数据与试卷中给出的示例数据可能是不同的。选手的程序必须是通用的，不能只对试卷中给定的数
据有效。
仔细阅读程序的输入、输出要求,千万不要输出没有要求的、多余的内容,例如:“请您输入xx数据: ”。
建议仔细阅读示例，不要想当然!
程序必须使用标准输入、标准输出，以便于机器评卷时重定向。
注意事项(C/C++ 组)
程序处理完一个用例的数据后， 立即退出(return o)，千万不要循环等待下一个用例的输入。
对于编程题目，要求选手给出的解答完全符合ANSI C++标准，不能使用诸如绘图、Win32API、 中断调用、硬件操作或与操作
系统相关的API。
代码中允许使用STL类库。
注意: main函数结尾需要return 0 ;
注意:所有依赖的函数必须明确地在源文件中#include <xxx> ，不能通过工程设置而省略常用头文件。
所有代码放在同一个源文件中，调试通过后，拷贝提交该源码。
提交时，注意选择所期望的编译器类型。
